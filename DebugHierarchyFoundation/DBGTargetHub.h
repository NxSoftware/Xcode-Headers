//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMapTable;

@interface DBGTargetHub : NSObject
{
    NSMapTable *_identifierToCrawledDebugHierarchyObjectMap;
}

+ (id)sharedHub;
+ (unsigned long long)version;
@property(retain, nonatomic) NSMapTable *identifierToCrawledDebugHierarchyObjectMap; // @synthesize identifierToCrawledDebugHierarchyObjectMap=_identifierToCrawledDebugHierarchyObjectMap;
- (void).cxx_destruct;
- (id)_performanceMetricsDictionaryForTypeInfoDuration:(double)arg1 objectProcessingDuration:(double)arg2;
- (id)_classesConformingTo:(id)arg1;
- (BOOL)_objectImplementsRequiredAdditionalGroupMethods:(id)arg1;
- (BOOL)_objectImplementsRequiredChildGroupMethods:(id)arg1;
- (BOOL)_classImplementsRequiredEntryPointMethods:(Class)arg1;
- (void)clearAllRequestsAndData;
- (BOOL)_shouldFetchPropertyWithDescription:(id)arg1 ofObject:(id)arg2 forRequestStore:(id)arg3;
- (BOOL)_shouldCrawlDebugHierarchyObject:(id)arg1 forRequestStore:(id)arg2;
- (id)_valueForPropertyWithName:(id)arg1 onObject:(id)arg2 forRequestStore:(id)arg3;
- (void)_crawlPropertiesOfObject:(id)arg1 forRequestStore:(id)arg2;
- (void)crawlDebugHierarchyObject:(id)arg1 inGroupWithID:(id)arg2 asDirectChild:(BOOL)arg3 belowParent:(id)arg4 withParentDefinedVisibility:(long long)arg5 forRequestStore:(id)arg6;
- (void)enumerateDebugHierarchyObjects:(id)arg1 inGroupWithID:(id)arg2 options:(id)arg3 asDirectChildren:(BOOL)arg4 belowParent:(id)arg5 forRequestStore:(id)arg6;
- (void)_executeRequestWithBackingStore:(id)arg1 forDebugHierarchyObject:(id)arg2;
- (void)_performDebugHierarchyObjectSpecificRequestWithBackingStore:(id)arg1;
- (void)_performEntryPointRequestWithBackingStore:(id)arg1;
- (BOOL)_shouldFetchOptionsForProviderClass:(Class)arg1 withPredicate:(id)arg2;
- (BOOL)_shouldFetchEnumsForProviderClass:(Class)arg1 withPredicate:(id)arg2;
- (void)_fetchTypeInformationIfNecessaryForRequestWithBackingStore:(id)arg1;
- (id)_responseDataForException:(id)arg1 caughtDuringRequest:(id)arg2 withMethodSignature:(const char *)arg3;
- (id)performRequest:(id)arg1;
- (id)performRequestWithRequestInBase64:(id)arg1;
- (id)init;

@end

