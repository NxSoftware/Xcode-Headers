//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "DTDKDeviceTokenBase.h"

#import "DTDKRemoteDeviceTokenUI.h"

@class DTDKRemoteDeviceConnection, DTDKRemoteDeviceConsoleController, DVTPlatform, NSArray, NSImage, NSNumber, NSSet, NSString;

@interface DTDKDeviceTokenBase (InterfaceExtensions) <DTDKRemoteDeviceTokenUI>
+ (id)keyPathsForValuesAffectingDeviceImage;
+ (id)keyPathsForValuesAffectingDeviceIcon;
@property(readonly) NSImage *deviceImage;
@property(readonly) NSImage *deviceIcon;

// Remaining properties
@property(readonly, nonatomic) id <DTDKRemoteDeviceToken> activeProxiedDeviceToken;
@property(readonly, copy, nonatomic) NSArray *applicationDictionaries;
@property(readonly, copy, nonatomic) NSSet *applications;
@property(readonly, copy, nonatomic) NSString *buildVersion;
@property(readonly, nonatomic) _Bool canBeWatchCompanion;
@property(readonly, copy, nonatomic) NSArray *connections;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSString *deviceActivationState;
@property(readonly, copy, nonatomic) NSArray *deviceAddresses;
@property(readonly) _Bool deviceAllowsSecureServices;
@property(readonly, copy, nonatomic) NSString *deviceArchitecture;
@property(readonly, copy, nonatomic) NSNumber *deviceAvailableCapacity;
@property(readonly, copy, nonatomic) NSNumber *deviceBatteryCapacity;
@property(readonly, copy, nonatomic) NSString *deviceBluetoothMAC;
@property(readonly, copy, nonatomic) NSNumber *deviceChipID;
@property(readonly, copy, nonatomic) NSString *deviceClass;
@property(readonly, copy, nonatomic) NSString *deviceClassForDisplay;
@property(readonly, copy, nonatomic) NSString *deviceCodename;
@property(readonly, copy, nonatomic) NSString *deviceColorString;
@property(retain, nonatomic) DTDKRemoteDeviceConsoleController *deviceConsoleController;
@property(readonly, copy, nonatomic) NSString *deviceCrashReporterKey;
@property(readonly, copy, nonatomic) NSString *deviceDevelopmentStatus;
@property(readonly, copy, nonatomic) NSNumber *deviceECID;
@property(readonly, copy, nonatomic) NSString *deviceEnclosureColorString;
@property(readonly, nonatomic) _Bool deviceHasInternalTools;
@property(readonly, nonatomic) _Bool deviceHasStandardTools;
@property(readonly, copy, nonatomic) NSString *deviceHostname;
@property(readonly, copy, nonatomic) NSString *deviceIMEI;
@property(readonly, copy, nonatomic) NSString *deviceIdentifier;
@property(readonly) _Bool deviceIsPaired;
@property(readonly, nonatomic) _Bool deviceIsProduction;
@property(readonly, nonatomic) _Bool deviceIsSupported;
@property(readonly, nonatomic) NSString *deviceModelUTI;
@property(readonly) long long deviceMountPort;
@property(readonly) long long deviceNFSPort;
@property(readonly, copy, nonatomic) NSString *deviceName;
@property(readonly, copy, nonatomic) NSString *deviceProcessorDescription;
@property(readonly, copy, nonatomic) NSNumber *deviceProductionSOC;
@property(readonly) long long deviceRsyncPort;
@property(readonly) long long deviceSSHPort;
@property(readonly, copy, nonatomic) NSString *deviceSerialNumber;
@property(readonly, copy, nonatomic) NSString *deviceSoftwareVersion;
@property(readonly) long long deviceTelnetPort;
@property(readonly, copy, nonatomic) NSString *deviceToolsType;
@property(readonly, copy, nonatomic) NSNumber *deviceTotalCapacity;
@property(readonly, copy, nonatomic) NSString *deviceType;
@property(readonly, copy, nonatomic) NSString *deviceWiFiMAC;
@property(readonly, nonatomic) _Bool hasDirectConnection;
@property(readonly) _Bool hasLoaded_buildVersion;
@property(readonly) _Bool hasLoaded_canBeWatchCompanion;
@property(readonly) _Bool hasLoaded_deviceActivationState;
@property(readonly) _Bool hasLoaded_deviceArchitecture;
@property(readonly) _Bool hasLoaded_deviceAvailableCapacity;
@property(readonly) _Bool hasLoaded_deviceBatteryCapacity;
@property(readonly) _Bool hasLoaded_deviceBluetoothMAC;
@property(readonly) _Bool hasLoaded_deviceChipID;
@property(readonly) _Bool hasLoaded_deviceClass;
@property(readonly) _Bool hasLoaded_deviceCodename;
@property(readonly) _Bool hasLoaded_deviceColorString;
@property(readonly) _Bool hasLoaded_deviceDevelopmentStatus;
@property(readonly) _Bool hasLoaded_deviceECID;
@property(readonly) _Bool hasLoaded_deviceEnclosureColorString;
@property(readonly) _Bool hasLoaded_deviceIMEI;
@property(readonly) _Bool hasLoaded_deviceIsProduction;
@property(readonly) _Bool hasLoaded_deviceName;
@property(readonly) _Bool hasLoaded_deviceProductionSOC;
@property(readonly) _Bool hasLoaded_deviceSerialNumber;
@property(readonly) _Bool hasLoaded_deviceToolsType;
@property(readonly) _Bool hasLoaded_deviceTotalCapacity;
@property(readonly) _Bool hasLoaded_deviceType;
@property(readonly) _Bool hasLoaded_deviceWiFiMAC;
@property(readonly) _Bool hasLoaded_isPasscodeLocked;
@property(readonly) _Bool hasLoaded_productVersion;
@property(readonly, nonatomic) _Bool hasWiredConnection;
@property(readonly, nonatomic) _Bool hasWirelessConnection;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isConnected;
@property(readonly, nonatomic) _Bool isPasscodeLocked;
@property(readonly, nonatomic) _Bool isSupportedOS;
@property(readonly, nonatomic) NSString *localizedDeviceModel;
@property(readonly) DVTPlatform *platform;
@property(readonly, nonatomic) DTDKRemoteDeviceConnection *primaryConnection;
@property(readonly, nonatomic) DTDKRemoteDeviceConnection *primaryWiredConection;
@property(readonly, nonatomic) DTDKRemoteDeviceConnection *primaryWirelessConection;
@property(readonly, copy, nonatomic) NSString *productVersion;
@property(readonly, copy, nonatomic) NSSet *provisioningProfiles;
@property(readonly, copy, nonatomic) NSSet *proxiedDeviceTokens;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSArray *supportedDeviceFamilies;
@property(readonly, copy, nonatomic) NSArray *systemApplicationDictionaries;
@property(readonly, copy, nonatomic) NSSet *systemApplications;
@property(readonly, nonatomic) void *wakeupToken;
@end

