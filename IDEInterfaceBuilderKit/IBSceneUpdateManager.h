//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "DVTInvalidation.h"

@class DVTDelayedInvocation, DVTDelayedInvocationScheduler, DVTStackBacktrace, NSMutableSet, NSString;

@interface IBSceneUpdateManager : NSObject <DVTInvalidation>
{
    DVTDelayedInvocation *_updateInvocation;
    NSMutableSet *_objectsWithPendingSceneUpdates;
    NSMutableSet *_issuedSceneUpdates;
    long long _ignoreSceneInvalidationNestingCount;
    long long _assertOnSynchronousUpdatesNestingCount;
    long long _delaySceneUpdatesNestingCount;
    id <IBSceneUpdateManagerDelegate> _delegate;
}

+ (id)runSynchronousUpdateForRoot:(id)arg1 scaleFactor:(id)arg2 targetRuntime:(id)arg3 request:(id)arg4 requestConfigurationBlock:(CDUnknownBlockType)arg5;
+ (void)initialize;
@property(nonatomic) __weak id <IBSceneUpdateManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateScenes;
- (void)_updateScene:(id)arg1;
- (id)_sceneRootsForInvalidatedObjects;
- (id)_remoteRequesterForSceneUpdate:(id)arg1;
- (void)_cancelPendingUpdates;
- (void)_clearSceneUpdate:(id)arg1;
- (void)waitForPendingUpdates;
- (void)removeReferencesToObject:(id)arg1;
- (id)delaySceneUpdates;
- (BOOL)areSynchronousSceneUpdatesAllowed;
- (void)assertOnSynchronousUpdatesDuring:(CDUnknownBlockType)arg1;
- (void)ignoreSceneInvalidationDuring:(CDUnknownBlockType)arg1;
- (BOOL)isIgnoringSceneInvalidation;
- (void)invalidateSceneContainingObject:(id)arg1 forReason:(CDUnknownBlockType)arg2;
- (BOOL)canUpdateSceneWithRoot:(id)arg1;
@property(retain, nonatomic) DVTDelayedInvocationScheduler *updateScheduler;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

